/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-03-18 09:10:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.productOrder;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import productOrder.model.vo.ProductOrderList;

public final class productOrderListView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("productOrder.model.vo.ProductOrderList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	ArrayList<ProductOrderList> list = (ArrayList<ProductOrderList>)request.getAttribute("list");
	int listCount = ((Integer)request.getAttribute("listCount")).intValue();
	int startPage = ((Integer)request.getAttribute("startPage")).intValue();
	int endPage = ((Integer)request.getAttribute("endPage")).intValue();
	int maxPage = ((Integer)request.getAttribute("maxPage")).intValue();
	int currentPage = ((Integer)request.getAttribute("currentPage")).intValue();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>lookBom</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/lb/resources/js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function ordercancel(){\r\n");
      out.write("\tvar message = confirm(\"정말로 취소하시겠습니까?\");\r\n");
      out.write("\tif(message == true){\r\n");
      out.write("\t\talert(\"취소되었습니다.\");\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function exchangeReturn(){\r\n");
      out.write("\tvar message = confirm(\"교환/반품페이지로 이동합니다.\");\r\n");
      out.write("\tif(message == true){\r\n");
      out.write("\t\tlocation.href='/lb/clist';\r\n");
      out.write("\t\t$(\"#review\").first().show();\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\talert(\"취소되었습니다.\")\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function purchaseConfirm(){\r\n");
      out.write("\tvar message = confirm(\"정말로 구매를 확정하겠습니까?\\n확정 시 취소가 불가능합니다.\");\r\n");
      out.write("\tif(message == true){\r\n");
      out.write("\t\talert(\"구매가 확정되었습니다 구매해주셔서 감사합니다.\");\r\n");
      out.write("\t/* \t$(\"#review\").show(); */\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* $(function(){\r\n");
      out.write("\t$(\"[id^=review]\").hide();\r\n");
      out.write("}); */\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\ta:link     {color:#007cd0;text-decoration:none} \r\n");
      out.write("\ta:visited  {color:#007cd0;text-decoration:none} \r\n");
      out.write("\ta:active   {color:#007cd0;text-decoration:none} \r\n");
      out.write("\ta:hover    {color:#0099ff;text-decoration:none} \r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table align=\"center\" width= 80% cellspacing=\"0\" border=\"0\"><tr><th align=\"left\"><h1>주문 내역</h1></th></tr></table>\r\n");
      out.write("<hr><br>\r\n");
      out.write("<table align=\"center\" width= 80% cellspacing=\"0\" border=\"1\">\r\n");
      out.write("\t<tr height=\"70px\">\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\"  width=\"\">주문번호</th>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\" width=\"\">주문일</th>\r\n");
      out.write("\t\t<th colspan=\"2\" align=\"center\" bgcolor=\"#f2f2f2\" width=\"40%\">주문내역</th>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\"  width=\"\">총 결제금액</th>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\" width=\"\">진행상태</th>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\" width=\"\">구매결정</th>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\" width=\"\">리뷰남기기</th>\r\n");
      out.write("\t</tr>\r\n");
 if(list.size() == 0){ 
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<th colspan=\"8\">\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<h1 align=\"center\">주문 내역이 없습니다.</h1>\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t</th>\r\n");
      out.write("\t</tr>\r\n");
 }else{ 
      out.write('\r');
      out.write('\n');
      out.write('	');
 for(ProductOrderList polist : list){ 
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>\r\n");
      out.write("\t\t\t");
      out.print( polist.getOrderProductBundle() );
      out.write(" -\r\n");
      out.write("\t\t\t");
      out.print( polist.getOrderNo() );
      out.write("\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t\t<th>");
      out.print( polist.getOrderDate() );
      out.write("</th>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<th width=\"150px\">\r\n");
      out.write("\t\t\t<img src=\"");
      out.print( polist.getProductImage5() );
      out.write("\" style=\"width:150px;height:150px\">\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t\t<th align=\"left\">\r\n");
      out.write("\t\t\t<a href=\"/lb/pdetail\" style=\"cursor:pointer;\">\r\n");
      out.write("\t\t\t[상품명] : ");
      out.print( polist.getProductName() );
      out.write(" <br>\r\n");
      out.write("\t\t\t[옵션] : [color] ");
      out.print( polist.getProductColor() );
      out.write(" \r\n");
      out.write("\t\t\t\t    [size] ");
      out.print( polist.getOrderProductSize() );
      out.write(" \t<br>\r\n");
      out.write("\t\t\t[가격] : [");
      out.print( polist.getDiscountRate() );
      out.write(" %]\t\r\n");
      out.write("\t\t\t\t\t ");
      out.print( polist.getProductPrice() );
      out.write("원\t/\t\r\n");
      out.write("\t\t\t\t\t ");
      out.print( polist.getOrderProductQuantity() );
      out.write("개\t<br>\r\n");
      out.write("\t\t\t</a>\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t\t<th>");
      out.print( polist.getOrderTotalPrice()  );
      out.write("원</th>\r\n");
      out.write("\t\t<th>");
      out.print( polist.getOrderProgress()  );
      out.write("</th>\r\n");
      out.write("\t\t<th width=\"100px\" height=\"100px\">\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"구매취소\" id=\"oc\" onclick=\"ordercancel()\" style=\"background-color:#666666; color:white; border:0; height:25px; width:80px; border-radius:5px;\">\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"교환/반품\" id=\"er\" onclick=\"exchangeReturn()\" style=\"background-color:#666666; color:white; border:0; height:25px; width:80px; border-radius:5px;\">\t\r\n");
      out.write("\t\t\t");
 if( polist.getOrderProgress().equals("배송완료")) { 
      out.write("\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"구매확정\" id=\"pc\" onclick=\"purchaseConfirm()\" style=\"background-color:#666666; color:white; border:0; height:25px; width:80px; border-radius:5px;\">\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t\t<th>\r\n");
      out.write("\t\t\t");
 if( polist.getOrderDecision().equals("구매확정")) { 
      out.write("\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"리뷰\" id=\"review\" onclick=\"location.href='/lb/rwrite'\" style=\"background-color:#666666; color:white; border:0; height:25px; width:50px; border-radius:5px;\">\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t</th>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");
 } 
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div align=\"center\">\r\n");
 if(currentPage <= 1){ 
      out.write("\r\n");
      out.write("\t<button style=\"background-color:#f2f2f2; color:black; border:0; width:80px; height:30px; border-radius:5px;\"> 맨처음 </button>&nbsp;\r\n");
 }else{ 
      out.write("\r\n");
      out.write("\t<a href=\"/lb/olist?page=1\" style=\"background-color:#f2f2f2; color:black; border:0; width:80px; height:30px; border-radius:5px;\">맨처음</a>&nbsp;\r\n");
} 
      out.write('\r');
      out.write('\n');
 if((currentPage - 10) < startPage && (currentPage - 10) > 1){ 
      out.write("\r\n");
      out.write("\t<a href=\"/lb/olist?page=");
      out.print( startPage - 10 );
      out.write("\">\r\n");
      out.write("\t\t<button style=\"background-color:#f2f2f2; color:black; border:0; width:30px; height:30px; border-radius:5px;\"> < </button>\r\n");
      out.write("\t</a>\r\n");
 }else{ 
      out.write("\r\n");
      out.write("\t<button style=\"background-color:#f2f2f2; color:black; border:0; width:30px; height:30px; border-radius:5px;\"> < </button>\r\n");
 } 
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
 for(int p = startPage; p <= endPage; p++){ 
	if(p == currentPage){ 
      out.write("\r\n");
      out.write("\t\t<button style=\"background-color:#4ddbff; color:white; border:0; width:30px; height:30px; border-radius:5px;\">");
      out.print( p  );
      out.write("</button>\r\n");
 }else{ 
      out.write("\r\n");
      out.write("\t<a href=\"/lb/olist?page=");
      out.print( p );
      out.write("\" style=\"background-color:#f2f2f2; color:black; border:0; width:30px; height:30px; border-radius:5px;\">");
      out.print( p );
      out.write("</a>\t\t\t\t\r\n");
 }} 
      out.write('	');
      out.write('\r');
      out.write('\n');
 if((currentPage + 10) > endPage && (currentPage + 10) < maxPage){ 
      out.write("\r\n");
      out.write("\t<a href=\"/lb/olist?page=");
      out.print( endPage + 10 );
      out.write("\" style=\"background-color:#f2f2f2; color:black; border:0; width:30px; height:30px; border-radius:5px;\"> > </a>&nbsp;\r\n");
 }else{ 
      out.write("\r\n");
      out.write("\t<button style=\"background-color:#f2f2f2; color:black; border:0; width:30px; height:30px; border-radius:5px;\"> > </button>&nbsp;\r\n");
 } 
      out.write('\r');
      out.write('\n');
 if(currentPage >= maxPage){ 
      out.write("\r\n");
      out.write("\t<button style=\"background-color:#f2f2f2; color:black; border:0; width:80px; height:30px; border-radius:5px;\"> 맨끝 </button>\r\n");
}else{ 
      out.write("\r\n");
      out.write("\t<a href=\"/lb/olist?page=");
      out.print( maxPage );
      out.write("\" style=\"background-color:#f2f2f2; color:black; border:0; width:80px; height:30px; border-radius:5px;\">맨끝</a>\r\n");
 } 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<hr>\r\n");
      out.write("<table align=\"center\" width= 80% cellspacing=\"0\" border=\"0\"><tr><th align=\"left\">\r\n");
      out.write("<tr>\r\n");
      out.write("<th align=\"right\"><br>\r\n");
      out.write("\t구매취소는 상품 준비단계 전까지 가능합니다.<br>\r\n");
      out.write("\t구매확정을 할 시, 교환이나 반품은 불가합니다.<br>\r\n");
      out.write("\t(발송완료 7일 후 자동 구매확정)<br>\r\n");
      out.write("\t구매확정 이후, 리뷰 작성이 가능합니다.<br>\r\n");
      out.write("</th>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
 } 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
