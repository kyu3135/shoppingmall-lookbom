/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-03-18 09:15:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.cerlist;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import cerlist.model.vo.CerList;
import java.util.*;

public final class cerListView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("cerlist.model.vo.CerList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	ArrayList<CerList> list = (ArrayList<CerList>)request.getAttribute("list");

      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>lookBom</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/lb/resources/js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$(\"#cerRequest\").hide();\r\n");
      out.write("\t$(\"input[type=button]\").eq(0).click(function(){\r\n");
      out.write("\t\t$(\"#cerRequest\").first().toggle(1000);\r\n");
      out.write("\t});\r\n");
      out.write("});\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table align=\"center\" width= 80% cellspacing=\"0\" border=\"0\"><tr><th align=\"left\"><h1>취소/교환/반품 내역</h1></th></tr></table>\r\n");
      out.write("<hr>\r\n");
      out.write("<table align=\"center\" width= 80% cellspacing=\"0\" border=\"1\">\r\n");
      out.write("\t<tr height=\"70px\">\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\"  width=\"\">접수번호</th>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\" width=\"\">접수일</th>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\" width=\"50%\">주문내역</th>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\"  width=\"\">취소/교환/반품 종류</th>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\" width=\"\">접수상태</th>\r\n");
      out.write("\t</tr>\r\n");
 if(list.size() == 0){ 
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<th colspan=\"5\">\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<h1 align=\"center\">취소/교환/반품 내역이 없습니다.</h1>\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t</th>\r\n");
      out.write("\t</tr>\r\n");
 }else{ 
      out.write("\r\n");
      out.write("\t<tr align=\"center\">\r\n");
      out.write("\t<a>\r\n");
      out.write("\t\t<td>1</td>\r\n");
      out.write("\t\t<td>2</td>\r\n");
      out.write("\t\t<td>3</td>\r\n");
      out.write("\t\t<td>4</td>\r\n");
      out.write("\t\t<td>5</td>\r\n");
      out.write("\t</a>\t\r\n");
      out.write("\t</tr>\r\n");
 } 
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<br><br>\r\n");
      out.write("<table align=\"center\" width= 80% cellspacing=\"0\" border=\"0\">\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th align=\"left\"><h1>교환/반품 신청</h1></th>\r\n");
      out.write("\t<td align=\"right\">\r\n");
      out.write("\t\t<input type=\"button\" value=\"신청하기\" style=\"background-color:#666666; color:white; border:0; width:200px; height:40px; border-radius:5px; cursor:pointer;\">\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<div id=\"cerRequest\">\r\n");
      out.write("<form action=\"/lb/cerinsert\" method=\"post\">\r\n");
      out.write("<hr><br>\r\n");
      out.write("<table align=\"center\" width= 80% cellspacing=\"0\" border=\"1\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\" width=\"120px\">주문번호</th>\r\n");
      out.write("\t\t<td></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr height=\"100px\">\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\">주문내역</th>\r\n");
      out.write("\t\t<td></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\">교환/반품 종류</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t\t<select>\r\n");
      out.write("\t\t\t\t<option value=\"default\" selected>신청 종류를 선택해주세요</option>\r\n");
      out.write("\t\t\t\t<option value=\"exchange\">교환</option>\r\n");
      out.write("\t\t\t\t<option value=\"return\">반품</option>\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\">접수제목</th>\r\n");
      out.write("\t\t<td><input type=\"text\" placeholder=\"[교환/반품 종류]간략한 사유를 적어주세요 ex) [교환]사이즈 문제\" style=\"width:450px;\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th align=\"center\" bgcolor=\"#f2f2f2\">접수내용</th>\r\n");
      out.write("\t\t<td><textarea rows=\"10\" cols=\"70\"></textarea></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<br>\r\n");
      out.write("<table align=\"center\" border=\"0\">\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"신청하기\" style=\"background-color:#666666; color:white; border:0; width:100px; height:40px; border-radius:5px;\"> &nbsp;\r\n");
      out.write("\t\t\t<input type=\"reset\" value=\"입력 취소\" style=\"background-color:#666666; color:white; border:0; width:100px; height:40px; border-radius:5px;\"> &nbsp;\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
